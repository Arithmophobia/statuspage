{"version":3,"sources":["helpers/helpers.js","actions.js","reducers.js","configureStore.js","components/Status.js","containers/App.js","containers/Root.js","index.js"],"names":["azureServices","azureLocations","dataDogServices","parseDataDog","data","filtered","JSON","parse","components","filter","obj","includes","name","objects","forEach","component","status","push","parseAzure","items","text","DOMParser","parseFromString","textToXML","getElementsByTagName","service","locations","location","i","length","textContent","toLowerCase","i2","indexOf","i3","REQUEST_STATUS","RECEIVE_STATUS","EXPIRE_STATUS","expireStatus","serviceProvider","type","receiveStatus","response","parseStatus","receivedAt","Date","now","fetchStatus","address","determineAddress","dispatch","requestStatus","fetch","then","fetchStatusIfNeeded","getState","state","statusesByServiceProvider","isFetching","didExpire","shouldFetchStatus","rootReducer","combineReducers","arguments","undefined","action","Object","assign","defineProperty","lastUpdated","loggerMiddleware","createLogger","OkOrBadIcon","_ref","react_default","a","createElement","SentimentSatisfied_default","style","color","SentimentVeryDissatisfied_default","ServiceStatuses","_ref2","Table_default","TableHead_default","TableRow_default","TableCell_default","map","key","TableBody_default","item","Status_OkOrBadIcon","width","scope","Status","_ref3","handleRefresh","updatedInfo","toLocaleTimeString","paddingTop","paddingBottom","fontFamily","Paper_default","marginLeft","marginRight","textAlign","fontSize","fontWeight","Button_default","boxShadow","backgroundColor","variant","mini","aria-label","onClick","Refresh_default","Status_ServiceStatuses","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRefreshClick","bind","assertThisInitialized","interval","setInterval","clearInterval","event","preventDefault","_this2","statuses","statusList","keys","components_Status","Component","connect","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","Root","es","containers_App","render","Root_Root","document","getElementById"],"mappings":"+QAAMA,EAAgB,CAAC,mBAAoB,iBAAkB,aACvDC,EAAiB,CAAC,UAAW,YAAa,gBAC1CC,EAAkB,CAAC,kBAAmB,kBAc5C,SAASC,EAAaC,GACpB,IACIC,EADOC,KAAKC,MAAMH,GACFI,WAAWC,OAAO,SAAAC,GAAG,OAAIR,EAAgBS,SAASD,EAAIE,QACtEC,EAAU,GAQd,OAPAR,EAASS,QAAQ,SAAUC,GACzB,IAAIC,EAA8B,gBAArBD,EAAUC,OAA2B,KAAO,MACzDH,EAAQI,KAAK,CACXL,KAAMG,EAAUH,KAChBI,OAAQA,MAGLH,EAYT,SAASK,EAAWd,GAClB,IACIe,EAXN,SAAmBC,GAGjB,OAFa,IAAIC,WACGC,gBAAgBF,EAAM,YAQhCG,CAAUnB,GACJoB,qBAAqB,QACjCX,EAAU,GACdb,EAAcc,QAAQ,SAAUW,GAC9B,IAAIC,EAAY,GAChBzB,EAAea,QAAQ,SAAUa,GAC/BD,EAAUT,KAAK,CACbL,KAAMe,EACNX,OAAQ,SAGZH,EAAQI,KAAK,CACXL,KAAMa,EACNC,UAAWA,MAKf,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAMU,OAAQD,IAAK,CACrC,IAAIR,EAAOD,EAAMS,GAAGE,YACpBV,EAAOA,EAAKW,cACZ,IAAK,IAAIC,EAAK,EAAGA,EAAKhC,EAAc6B,OAAQG,IAAM,CAChD,IAAIP,EAAUzB,EAAcgC,GAC5B,IAA6C,IAAzCZ,EAAKa,QAAQR,EAAQM,eACvB,IAAK,IAAIG,EAAK,EAAGA,EAAKjC,EAAe4B,OAAQK,IAAM,CACjD,IAAIP,EAAW1B,EAAeiC,IACgB,IAA1Cd,EAAKa,QAAQN,EAASI,iBACxBlB,EAAQmB,GAAIN,UAAUQ,GAAIlB,OAAS,SAM7C,OAAOH,EClEF,IAAMsB,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAgB,gBAGtB,SAASC,EAAaC,GAC3B,MAAO,CACLC,KAAMH,EACNE,mBAWJ,SAASE,EAAcF,EAAiBG,GACtC,IAAI1B,EDiDC,SAAqBZ,EAAMmC,GAChC,OAAQA,GACN,IAAK,QACH,OAAOrB,EAAWd,GACpB,IAAK,UAGL,QACE,OAAOD,EAAaC,ICzDXuC,CAAYD,EAAUH,GACnC,MAAO,CACLC,KAAMJ,EACNG,kBACAvB,OAAQA,EACR4B,WAAYC,KAAKC,OAIrB,SAASC,EAAYR,GACnB,IAAIS,EDjCC,SAA0BT,GAC/B,OAAQA,GACN,IAAK,QACH,MAAO,uDACT,IAAK,UAGL,QACE,MAAO,2CCyBGU,CAAiBV,GAC/B,OAAO,SAAAW,GAEL,OADAA,EApBJ,SAAuBX,GACrB,MAAO,CACLC,KAAML,EACNI,mBAiBSY,CAAcZ,IAChBa,IAAMJ,GACVK,KAAK,SAAAX,GAAQ,OAAIA,EAAStB,SAC1BiC,KAAK,SAAAjC,GAAI,OAAI8B,EAAST,EAAcF,EAAiBnB,OAerD,SAASkC,EAAoBf,GAClC,OAAO,SAACW,EAAUK,GAChB,GAbJ,SAA2BC,EAAOjB,GAChC,IAAMvB,EAASwC,EAAMC,0BAA0BlB,GAC/C,OAAKvB,IAEMA,EAAO0C,YAGT1C,EAAO2C,UAMVC,CAAkBL,IAAYhB,GAChC,OAAOW,EAASH,EAAYR,KCVlC,IAIesB,EAJKC,YAAgB,CAClCL,0BAdF,WAAuD,IAApBD,EAAoBO,UAAAlC,OAAA,QAAAmC,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAAlC,OAAA,EAAAkC,UAAA,QAAAC,EACrD,OAAQC,EAAOzB,MACb,KAAKH,EACL,KAAKD,EACL,KAAKD,EACH,OAAO+B,OAAOC,OAAO,GAAIX,EAAlBU,OAAAE,EAAA,EAAAF,CAAA,GACJD,EAAO1B,gBApChB,WAOE,IANAiB,EAMAO,UAAAlC,OAAA,QAAAmC,IAAAD,UAAA,GAAAA,UAAA,GANQ,CACNL,YAAY,EACZC,WAAW,EACXxC,MAAO,IAET8C,EACAF,UAAAlC,OAAA,EAAAkC,UAAA,QAAAC,EACA,OAAQC,EAAOzB,MACb,KAAKH,EACH,OAAO6B,OAAOC,OAAO,GAAIX,EAAO,CAC9BG,WAAW,IAEf,KAAKxB,EACH,OAAO+B,OAAOC,OAAO,GAAIX,EAAO,CAC9BE,YAAY,EACZC,WAAW,IAEf,KAAKvB,EACH,OAAO8B,OAAOC,OAAO,GAAIX,EAAO,CAC9BE,YAAY,EACZC,WAAW,EACXxC,MAAO8C,EAAOjD,OACdqD,YAAaJ,EAAOrB,aAExB,QACE,OAAOY,GAUqBxC,CAAOwC,EAAMS,EAAO1B,iBAAkB0B,KAEpE,QACE,OAAOT,MCzCPc,EAAmBC,wNCOnBC,EAAc,SAAAC,GAOlB,MAAmB,OAPeA,EAAbzD,OAOM0D,EAAAC,EAAAC,cAAEC,EAAAF,EAAF,CAAyBG,MANrC,CACbC,MAAO,gBAMPL,EAAAC,EAAAC,cAAEI,EAAAL,EAAF,CAAgCG,MAJnB,CACbC,MAAO,UAMLE,GAAkB,SAAAC,GAAe,IAAZ/D,EAAY+D,EAAZ/D,MAKzB,YAAc6C,IAAV7C,GAAwC,IAAjBA,EAAMU,OACxB,KAEJV,EAAM,GAAGO,UAmBVgD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACED,EAAAC,EAAAC,cAACU,EAAAX,EAAD,MACCxD,EAAM,GAAGO,UAAU6D,IAAI,SAAC5D,GAAD,OACtB+C,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWa,IAAK7D,EAASf,MACtBe,EAASf,UAKlB8D,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACGxD,EAAMoE,IAAI,SAACG,GAAD,OACThB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAUa,IAAKE,EAAK9E,MAClB8D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACGe,EAAK9E,MAEP8E,EAAKhE,UAAU6D,IAAI,SAAC5D,GAAD,OAClB+C,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAWa,IAAK7D,EAASf,MACvB8D,EAAAC,EAAAC,cAACe,EAAD,CAAa3E,OAAQW,EAASX,iBApC1C0D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAOG,MATa,CACtBc,MAAO,QASHlB,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACGxD,EAAMoE,IAAI,SAACG,GAAD,OACThB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAUa,IAAKE,EAAK9E,MAClB8D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAW5D,UAAU,KAAK8E,MAAM,OAC7BH,EAAK9E,MAER8D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAW5D,UAAU,KAAK8E,MAAM,OAC9BnB,EAAAC,EAAAC,cAACe,EAAD,CAAa3E,OAAQ0E,EAAK1E,gBA0F3B8E,GAnDA,SAAAC,GAAgD,IAA7CC,EAA6CD,EAA7CC,cAAezD,EAA8BwD,EAA9BxD,gBAAiBvB,EAAa+E,EAAb/E,OAwBhD,GAAwB,OAApBuB,GAAuC,OAAXvB,EAC9B,OAAO,KAzBoD,IA2BrDqD,EAAuBrD,EAAvBqD,YAAalD,EAAUH,EAAVG,MACf8E,EAAc5B,EAAcK,EAAAC,EAAAC,cAAA,+BACf,IAAI/B,KAAKwB,GAAa6B,qBADP,IAC8B,KACtD,KAEV,OACExB,EAAAC,EAAAC,cAAA,OAAKE,MA/BY,CACjBqB,WAAY,KACZC,cAAe,KACfC,WAAY,yCA6BV3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKE,MA5BS,CAClBC,MAAO,aACPwB,WAAY,OACZC,YAAa,OACbC,UAAW,SACXC,SAAU,OACVC,WAAY,MAuBLpE,EACDmC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAQG,MAlBI,CAClB+B,UAAW,OACXC,gBAAiB,SAiBTC,QAAQ,MACRC,MAAM,EACNC,aAAW,UACXC,QAASlB,GACTtB,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,OAPJ,KASAD,EAAAC,EAAAC,cAAA,OAAKE,MA7BS,CAClB2B,UAAW,SACXN,WAAY,QA2BkBF,GAC1BvB,EAAAC,EAAAC,cAACwC,GAAD,CAAiBjG,MAAOA,OCvH1BkG,eACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAArD,OAAAsD,EAAA,EAAAtD,CAAAuD,KAAAJ,IACjBE,EAAArD,OAAAwD,EAAA,EAAAxD,CAAAuD,KAAAvD,OAAAyD,EAAA,EAAAzD,CAAAmD,GAAAO,KAAAH,KAAMH,KACDO,mBAAqBN,EAAKM,mBAAmBC,KAAxB5D,OAAA6D,EAAA,EAAA7D,QAAA6D,EAAA,EAAA7D,CAAAqD,KAFTA,mFAKC,IACVrE,EAAauE,KAAKH,MAAlBpE,SACRA,EAASI,EAAoB,UAC7BJ,EAASI,EAAoB,YAC7BmE,KAAKO,SAAWC,YAAY,WAC1B/E,EAASZ,EAAa,UACtBY,EAASZ,EAAa,YACtBY,EAASI,EAAoB,UAC7BJ,EAASI,EAAoB,aAC5B,oDAIH4E,cAAcT,KAAKO,qDAGFzF,EAAiB4F,GAClCA,EAAMC,iBADmC,IAEjClF,EAAauE,KAAKH,MAAlBpE,SACRA,EAASZ,EAAaC,IACtBW,EAASI,EAAoBf,qCAGtB,IAAA8F,EAAAZ,KACCa,EAAab,KAAKH,MAAlBgB,SAEFC,EADmBrE,OAAOsE,KAAKF,GACD/C,IAAI,SAACC,GAAD,OACtCd,EAAAC,EAAAC,cAAC6D,GAAD,CAAQjD,IAAKA,EACXQ,cAAeqC,EAAKR,mBAAmBC,KAAKO,EAAM7C,GAClDjD,gBAAiBiD,EACjBxE,OAAQsH,EAAS9C,OAErB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM2D,WAxCIG,aAyDHC,IFxDwBC,GEwDxBD,eAPf,SAAyBnF,GAEvB,MAAO,CACL8E,SAF8C9E,EAAxCC,4BAMKkF,CAAyBtB,IC1DlCwB,GHGGC,YACLjF,EACA+E,GACAG,YAAgBC,IAAiB1E,IGJhB2E,oLAEjB,OACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAUL,MAAOA,IACfnE,EAAAC,EAAAC,cAACuE,GAAD,cAJ0BT,aCFlCU,iBAAO1E,EAAAC,EAAAC,cAACyE,GAAD,MAAUC,SAASC,eAAe","file":"static/js/main.745b642f.chunk.js","sourcesContent":["const azureServices = ['Virtual Machines', 'Cloud Services', 'Functions']\r\nconst azureLocations = ['East US', 'East US 2', 'North Europe']\r\nconst dataDogServices = ['Alerting Engine', 'Event Pipeline']\r\n\r\nexport function determineAddress(serviceProvider) {\r\n  switch (serviceProvider) {\r\n    case 'Azure':\r\n      return 'https://azurecomcdn.azureedge.net/en-us/status/feed/'\r\n    case 'DataDog':\r\n      return 'https://status.datadoghq.com/index.json'\r\n    // default should probably return error.. fix later\r\n    default:\r\n      return 'https://status.datadoghq.com/index.json'\r\n  }\r\n}\r\n\r\nfunction parseDataDog(data) {\r\n  var json = JSON.parse(data)\r\n  var filtered = json.components.filter(obj => dataDogServices.includes(obj.name))\r\n  var objects = []\r\n  filtered.forEach(function (component) {\r\n    var status = component.status === 'operational' ? \"OK\" : \"BAD\"\r\n    objects.push({\r\n      name: component.name,\r\n      status: status\r\n    })\r\n  })\r\n  return objects\r\n}\r\n\r\nfunction textToXML(text) {\r\n  var parser = new DOMParser();\r\n  var xmlDoc = parser.parseFromString(text, \"text/xml\");\r\n  return xmlDoc\r\n}\r\n\r\n// only rss available?\r\n// rss example:\r\n// https://www.reddit.com/r/AZURE/comments/4tnj7x/azure_status_rss_fields/d5kr8gj/\r\nfunction parseAzure(data) {\r\n  var xml = textToXML(data)\r\n  var items = xml.getElementsByTagName(\"item\")\r\n  var objects = []\r\n  azureServices.forEach(function (service) {\r\n    var locations = []\r\n    azureLocations.forEach(function (location) {\r\n      locations.push({\r\n        name: location,\r\n        status: 'OK'\r\n      })\r\n    })\r\n    objects.push({\r\n      name: service,\r\n      locations: locations\r\n    })\r\n  })\r\n\r\n  // below only happens when there are incidents = items\r\n  for (var i = 0; i < items.length; i++) {\r\n    var text = items[i].textContent\r\n    text = text.toLowerCase()\r\n    for (var i2 = 0; i2 < azureServices.length; i2++) {\r\n      var service = azureServices[i2]\r\n      if (text.indexOf(service.toLowerCase()) !== -1) {\r\n        for (var i3 = 0; i3 < azureLocations.length; i3++) {\r\n          var location = azureLocations[i3]\r\n          if (text.indexOf(location.toLowerCase()) !== -1) {\r\n            objects[i2].locations[i3].status = 'BAD'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return objects\r\n}\r\n\r\nexport function parseStatus(data, serviceProvider) {\r\n  switch (serviceProvider) {\r\n    case 'Azure':\r\n      return parseAzure(data)\r\n    case 'DataDog':\r\n      return parseDataDog(data)\r\n    // default should probably return error.. fix later  \r\n    default:\r\n      return parseDataDog(data)\r\n  }\r\n}","import fetch from 'cross-fetch'\r\nimport {\r\n  determineAddress,\r\n  parseStatus\r\n} from './helpers/helpers'\r\n\r\n// available actions\r\nexport const REQUEST_STATUS = 'REQUEST_STATUS'\r\nexport const RECEIVE_STATUS = 'RECEIVE_STATUS'\r\nexport const EXPIRE_STATUS = 'EXPIRE_STATUS'\r\n\r\n// User can refresh \r\nexport function expireStatus(serviceProvider) {\r\n  return {\r\n    type: EXPIRE_STATUS,\r\n    serviceProvider\r\n  }\r\n}\r\n\r\nfunction requestStatus(serviceProvider) {\r\n  return {\r\n    type: REQUEST_STATUS,\r\n    serviceProvider\r\n  }\r\n}\r\n\r\nfunction receiveStatus(serviceProvider, response) {\r\n  var status = parseStatus(response, serviceProvider)\r\n  return {\r\n    type: RECEIVE_STATUS,\r\n    serviceProvider,\r\n    status: status, \r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction fetchStatus(serviceProvider) {\r\n  var address = determineAddress(serviceProvider)\r\n  return dispatch => {\r\n    dispatch(requestStatus(serviceProvider))\r\n    return fetch(address)\r\n      .then(response => response.text())\r\n      .then(text => dispatch(receiveStatus(serviceProvider, text)))\r\n  }\r\n}\r\n\r\nfunction shouldFetchStatus(state, serviceProvider) {\r\n  const status = state.statusesByServiceProvider[serviceProvider]\r\n  if (!status) {\r\n    return true\r\n  } else if (status.isFetching) {\r\n    return false\r\n  } else {\r\n    return status.didExpire\r\n  }\r\n}\r\n\r\nexport function fetchStatusIfNeeded(serviceProvider) {\r\n  return (dispatch, getState) => {\r\n    if (shouldFetchStatus(getState(), serviceProvider)) {\r\n      return dispatch(fetchStatus(serviceProvider))\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  REQUEST_STATUS,\r\n  RECEIVE_STATUS,\r\n  EXPIRE_STATUS\r\n} from './actions'\r\n\r\nfunction status(\r\n  state = {\r\n    isFetching: false,\r\n    didExpire: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case EXPIRE_STATUS:\r\n      return Object.assign({}, state, {\r\n        didExpire: true\r\n      })\r\n    case REQUEST_STATUS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didExpire: false\r\n      })\r\n    case RECEIVE_STATUS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didExpire: false,\r\n        items: action.status,\r\n        lastUpdated: action.receivedAt\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction statusesByServiceProvider(state = {}, action) {\r\n  switch (action.type) {\r\n    case EXPIRE_STATUS:\r\n    case RECEIVE_STATUS:\r\n    case REQUEST_STATUS:\r\n      return Object.assign({}, state, {\r\n        [action.serviceProvider]: status(state[action.serviceProvider], action)\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  statusesByServiceProvider\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}","import React from 'react'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst OkOrBadIcon = ({ status }) => {\r\n  const gStyle = {\r\n    color: 'lightgreen'\r\n  }\r\n  const bStyle = {\r\n    color: 'red'\r\n  }\r\n  return (status === 'OK') ? < SentimentSatisfiedIcon style={gStyle} /> :\r\n    < SentimentVeryDissatisfiedIcon style={bStyle} />\r\n}\r\n\r\nconst ServiceStatuses = ({ items }) => {\r\n  const smallTableStyle = {\r\n    width: '25%'\r\n  }\r\n\r\n  if (items === undefined || items.length === 0) {\r\n    return null\r\n  }\r\n  if (!items[0].locations) {\r\n    return (\r\n      <Table style={smallTableStyle}>\r\n        <TableBody>\r\n          {items.map((item) =>\r\n            <TableRow key={item.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {item.name}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <OkOrBadIcon status={item.status} />\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  } else {\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            {items[0].locations.map((location) =>\r\n              <TableCell key={location.name}>\r\n                {location.name}\r\n              </TableCell>\r\n            )}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) =>\r\n            <TableRow key={item.name}>\r\n              <TableCell>\r\n                {item.name}\r\n              </TableCell>\r\n              {item.locations.map((location) =>\r\n                <TableCell key={location.name}>\r\n                  <OkOrBadIcon status={location.status} />\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nconst Status = ({ handleRefresh, serviceProvider, status }) => {\r\n  // styles should be moved to css..\r\n  const paperStyle = {\r\n    paddingTop: '2%',\r\n    paddingBottom: '2%',\r\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\"\r\n  }\r\n  const headerStyle = {\r\n    color: 'chartreuse',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    textAlign: 'center',\r\n    fontSize: '40px',\r\n    fontWeight: 900\r\n  }\r\n  const updateStyle = {\r\n    textAlign: 'center',\r\n    paddingTop: '2vh'\r\n  }\r\n  const buttonStyle = {\r\n    boxShadow: 'none',\r\n    backgroundColor: 'white'\r\n  }\r\n\r\n  if (serviceProvider === null || status === null) {\r\n    return null\r\n  }\r\n  const { lastUpdated, items } = status\r\n  const updatedInfo = lastUpdated ? <span>\r\n    Last updated at {new Date(lastUpdated).toLocaleTimeString()}.{' '}\r\n  </span> : null;\r\n\r\n  return (\r\n    <div style={paperStyle}>\r\n      <Paper >\r\n        <div style={headerStyle}>\r\n          {serviceProvider}\r\n          <Button style={buttonStyle}\r\n            variant=\"fab\"\r\n            mini={true}\r\n            aria-label=\"Refresh\"\r\n            onClick={handleRefresh}>\r\n            <RefreshIcon />\r\n          </Button> </div>\r\n        <div style={updateStyle}>{updatedInfo}</div>\r\n        <ServiceStatuses items={items} />\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Status","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { fetchStatusIfNeeded, expireStatus } from '../actions'\r\nimport Status from '../components/Status'\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleRefreshClick = this.handleRefreshClick.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props\r\n    dispatch(fetchStatusIfNeeded('Azure'))\r\n    dispatch(fetchStatusIfNeeded('DataDog'))\r\n    this.interval = setInterval(() => {\r\n      dispatch(expireStatus('Azure'))\r\n      dispatch(expireStatus('DataDog'))\r\n      dispatch(fetchStatusIfNeeded('Azure'))\r\n      dispatch(fetchStatusIfNeeded('DataDog'))\r\n    }, 600000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  handleRefreshClick(serviceProvider, event) {\r\n    event.preventDefault()\r\n    const { dispatch } = this.props\r\n    dispatch(expireStatus(serviceProvider))\r\n    dispatch(fetchStatusIfNeeded(serviceProvider))\r\n  }\r\n\r\n  render() {\r\n    const { statuses } = this.props\r\n    const serviceProviders = Object.keys(statuses)\r\n    const statusList = serviceProviders.map((key) =>\r\n      <Status key={key}\r\n        handleRefresh={this.handleRefreshClick.bind(this, key)}\r\n        serviceProvider={key}\r\n        status={statuses[key]} />)\r\n\r\n    return (\r\n      <div>\r\n        <div>{statusList}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  statuses: PropTypes.object.isRequired,\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { statusesByServiceProvider: statuses } = state\r\n  return {\r\n    statuses,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from '../configureStore'\r\nimport App from './App'\r\n\r\nconst store = configureStore()\r\n\r\nexport default class Root extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    )\r\n  }\r\n}","import 'babel-polyfill'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport Root from './containers/Root'\n\nrender(<Root />, document.getElementById('root'))\n\n"],"sourceRoot":""}